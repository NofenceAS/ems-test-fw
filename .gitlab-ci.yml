
# Nofence CI
variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - compliance
  - build

before_script:
  - apt install -y ruby
  ## Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)
  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ##
  ## Use ssh-keyscan to scan the keys of your private server. Replace gitlab.com
  ## with your own domain name. You can copy and repeat that command if you have
  ## more than one server to connect to.
  ##
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  ##
  ##  Initialize zephyr repos from Docker caches
  ##
  - west init -l . || true
  - west update --path-cache /cache/x3


check_compliance:
  stage: compliance
  extends: .build-job
  script:
    - export ZEPHYR_BASE=${PWD}/../zephyr
    - ls -la
#    - export
    - git log  --pretty=oneline -n 10
#    - git diff ${CI_COMMIT_SHA}~ | ${ZEPHYR_BASE}/scripts/checkpatch.pl --ignore BRACES -

firmware:
  stage: build
  extends: .build-job
  script:
    - export BUILD_NUMBER=$(($CI_PIPELINE_IID + 1000))
    - printf "$BUILD_NUMBER" > buildnumber
    - printf "$CI_COMMIT_SHA"
    - ../zephyr/scripts/twister -i -T tests/
#    - west build -p

.build-job:
  image: registry.gitlab.com/nofence/x3-fw-app/x3-firmware-ci



